name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Download Gradle wrapper
      run: |
        mkdir -p gradle/wrapper
        wget -O gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/master/gradle/wrapper/gradle-wrapper.jar

    - name: Check project structure
      run: |
        echo "Project Structure:"
        ls -R
        echo "build.gradle contents:"
        cat build.gradle
        echo "app/build.gradle contents:"
        cat app/build.gradle
        echo "settings.gradle contents:"
        cat settings.gradle

    - name: Build with Gradle
      run: ./gradlew build --stacktrace --info > gradle_output.log 2>&1
      continue-on-error: true

    - name: Display Gradle output
      if: always()
      run: cat gradle_output.log

    - name: Generate Gradle build scan
      if: failure()
      run: ./gradlew build --scan --stacktrace --info

    - name: Upload Gradle output
      uses: actions/upload-artifact@v3
      with:
        name: gradle-output
        path: gradle_output.log

    - name: Upload build reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: |
          app/build/reports
          build/reports

    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace --info
      if: success()

    - name: Upload debug APK
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk
        asset_name: AthaiInfo-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
